---
- name: Add optional custom apt repositories (for additional zookeeper versions)
  apt_repository:
    repo: "{{ item.repository_url }}"
    state: present
    update_cache: yes
  when:
    - ansible_distribution_version is version_compare(item.distro_version, item.version_comparator | d('='))
  with_items:
    - "{{ zookeeper_debian_apt_repositories }}"

- name: Apt install required system packages.
  apt:
    name: "{{ item.pkg }}{% if item.state == 'present' and zookeeper_version is defined and zookeeper_version != '' %}={{ zookeeper_version }}*{% endif %}"
    state: "{{ item.state }}"
    force: "{{ zookeeper_debian_apt_force_apply }}"
    force_apt_get: yes
    dpkg_options: "{{ dpkg_force_rewrite_configs | ternary('force-confdef,force-confnew', 'force-confdef,force-confold') }}"
    update_cache: yes
    cache_valid_time: "{{ apt_cache_timeout }}"
  environment:
    DEBIAN_FRONTEND: noninteractive
    RUNLEVEL: 1
  with_items:
    - "{{ zookeeper_debian_apt_packages }}"
  tags:
    - bootstrap

- name: get package facts
  package_facts:
    manager: auto

- name: Hold {{ item.pkg }} package version
  dpkg_selections:
    name: "{{ item.pkg }}"
    selection: "hold"
  when:
    - zookeeper_debian_apt_hold_packages
    - item.pkg in ansible_facts.packages
    - item.state != 'absent'
  with_items:
    - "{{ zookeeper_debian_apt_packages }}"

- include_tasks: systemd.yml
  when:
    - zookeeper_debian_systemd_enabled
  tags:
    - deploy

- debug: var=zookeeper_hosts

- name: Overwrite myid file.
  template:
    src: "myid.j2"
    dest: "{{ zookeeper_conf_dir }}/conf/myid"
    force: "{{ zookeeper_force_myid }}"
  tags:
    - deploy
  notify:
    - Restart zookeeper

- name: Overwrite default config file
  template:
    src: "zoo.cfg.j2"
    dest: "{{ zookeeper_conf_dir }}/conf/zoo.cfg"
  tags:
    - deploy
  notify:
    - Restart zookeeper
